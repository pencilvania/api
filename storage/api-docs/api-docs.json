{
    "openapi": "3.0.0",
    "info": {
        "title": "CarTrack",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost",
            "description": "Default server"
        }
    ],
    "paths": {
        "/api/affiliations/create": {
            "post": {
                "tags": [
                    "Affiliations"
                ],
                "summary": "create affiliations",
                "operationId": "App\\Http\\Controllers\\AffiliationController::create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "hero_id": "2",
                                    "name": "superman"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/affiliations/{id}/remove": {
            "delete": {
                "tags": [
                    "Affiliations"
                ],
                "summary": "remove one affiliation with id",
                "operationId": "App\\Http\\Controllers\\AffiliationController::remove",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register",
                "description": "Register a new user and send notification mail",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirm password",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "description": "Login an user",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Wrong combination of email and password or email not verified"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "description": "Logout an user",
                "operationId": "logout",
                "responses": {
                    "204": {
                        "description": "Successful operation with no content in return"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/auth/getUser": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get user",
                "description": "Retrieve information from current user",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/auth/password/change": {
            "patch": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change password",
                "description": "Change an user's password (requires current password) and send notification mail",
                "operationId": "changePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "new_password": {
                                        "description": "New password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "new_password_confirmation": {
                                        "description": "Confirm new password",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Wrong combination of email and password or email not verified"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/heros/{id}/realname": {
            "get": {
                "tags": [
                    "Heros"
                ],
                "summary": "Get Real name",
                "operationId": "App\\Http\\Controllers\\HerosController::getRealname",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/heros/{id}/heroname": {
            "get": {
                "tags": [
                    "Heros"
                ],
                "summary": "Get Hero name",
                "operationId": "App\\Http\\Controllers\\HerosController::getHeroname",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/heros/{id}/publisher": {
            "get": {
                "tags": [
                    "Heros"
                ],
                "summary": "Get publisher name by id",
                "operationId": "App\\Http\\Controllers\\HerosController::getPublishername",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/heros/{id}/affiliations": {
            "get": {
                "tags": [
                    "Heros"
                ],
                "summary": "Get affiliations list of hero by id",
                "operationId": "App\\Http\\Controllers\\HerosController::getAffiliations",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/heros/search/{name}": {
            "get": {
                "tags": [
                    "Heros"
                ],
                "summary": "search hero by name",
                "operationId": "App\\Http\\Controllers\\HerosController::searchByName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/heros/findall": {
            "get": {
                "tags": [
                    "Heros"
                ],
                "summary": "find all Heros",
                "operationId": "App\\Http\\Controllers\\HerosController::findAll",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/heros/{id}": {
            "get": {
                "tags": [
                    "Heros"
                ],
                "summary": "find hero by id",
                "operationId": "App\\Http\\Controllers\\HerosController::findById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/heros/create": {
            "post": {
                "tags": [
                    "Heros"
                ],
                "summary": "add new hero",
                "operationId": "App\\Http\\Controllers\\HerosController::create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "heroname": "qeqwer",
                                    "realname": "ewrewr",
                                    "publisher": "sssss",
                                    "fadate": "2017/03/22",
                                    "affiliations": "[ { \"name\": \"name1\" }, { \"name\": \"name2\" }, { \"name\": \"name3\" }]"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/heros/{id}/update": {
            "put": {
                "tags": [
                    "Heros"
                ],
                "summary": "edit  hero by id",
                "operationId": "App\\Http\\Controllers\\HerosController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "realname": "milad",
                                    "heroname": "superman",
                                    "publisher": "dc",
                                    "fadate": "2019/03/24"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/heros/{id}/remove": {
            "delete": {
                "tags": [
                    "Heros"
                ],
                "summary": "remove one heros with id",
                "operationId": "App\\Http\\Controllers\\HerosController::remove",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        }
    }
}